apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: production
spec:
  replicas: 2  # Number of pod replicas
  selector:
    matchLabels:
      version: "v1"
  template:
    spec:
      affinity:
        podAntiAffinity:
          # Ensures that the pods are not co-located on a single node
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - store
                topologyKey: kubernetes.io/hostname
              weight: 100
      initContainers:
        # Init container to check database connectivity before starting the main application
        - name: init-ds
          image: busybox:latest
          command:
            - "/bin/sh"
            - "-c"
            - |
              while true
              do
                rt=$(nc -z -w 1 store-postgresql 5432)
                if [ $? -eq 0 ]; then
                  echo "DB is UP"
                  break
                fi
                echo "DB is not yet reachable; sleep for 10s before retry"
                sleep 10
              done
      containers:
        - name: store-app
          image: kamathadityaa/store-istio
          securityContext:
            runAsUser: 1000  # Run as non-root user for security
            runAsGroup: 3000
            allowPrivilegeEscalation: false
          env:
            # Environment variables for configuring the store microservice
            - name: SPRING_PROFILES_ACTIVE
              value: prod
            - name: JHIPSTER_SECURITY_AUTHENTICATION_JWT_BASE64_SECRET
              valueFrom:
                secretKeyRef:
                  name: jwt-secret
                  key: secret
            # Database configuration
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://store-postgresql.production.svc.cluster.local:5432/store
            - name: SPRING_DATASOURCE_USERNAME
              value: store
            - name: SPRING_R2DBC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: store-postgresql
                  key: postgresql-password
            # Additional configurations for the application
            - name: SPRING_LIQUIBASE_URL
              value: jdbc:postgresql://store-postgresql.production.svc.cluster.local:5432/store
            - name: SPRING_R2DBC_URL
              value: r2dbc:postgresql://store-postgresql.production.svc.cluster.local:5432/store
            - name: SPRING_SLEUTH_PROPAGATION_KEYS
              value: "x-request-id,x-ot-span-context"
            - name: JAVA_OPTS
              value: " -Xmx256m -Xms256m"
            - name: SERVER_SHUTDOWN
              value: graceful
          resources:
            # Resource limits and requests
            requests:
              memory: "512Mi"
              cpu: "500m"
            limits:
              memory: "1Gi"
              cpu: "1"
          ports:
            - name: http
              containerPort: 8080
          readinessProbe:
            # Readiness probe to check if the service is ready to handle traffic
            httpGet:
              path: /management/health/readiness
              port: http
            initialDelaySeconds: 20
            periodSeconds: 15
            failureThreshold: 6
          livenessProbe:
            # Liveness probe to check if the service is alive and running
            httpGet:
              path: /management/health/liveness
              port: http
            initialDelaySeconds: 100
            periodSeconds: 10
            failureThreshold: 3
          lifecycle:
            # Lifecycle hook for graceful shutdown of container
            preStop:
              exec:
                command: ["/bin/sh", "-c", "sleep 10"]
