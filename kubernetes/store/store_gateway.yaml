# Istio Gateway configuration for the "store" service
apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: store-gateway
  namespace: production
  labels:
    gateway: store-gateway
    istio: ingressgateway
spec:
  selector:
    istio: ingressgateway
  servers:
    - port:
        number: 80
        name: http
        protocol: HTTP
      hosts:
        - store.jhipster.34.76.233.160.nip.io
    - port:
        number: 80
        name: http2
        protocol: HTTP2
      hosts:
      - "store.jhipster.34.76.233.160.nip.io"
      - "oauth2-proxy.production.svc.cluster.local" # The OAuth2 proxy service

---
# Istio VirtualService configuration for the "store" service
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: store-virtualservice
  namespace: production
  labels:
    service: store-virtualservice
spec:
  hosts:
    - store.jhipster.34.76.233.160.nip.io
  gateways:
    - store-gateway
  http:
    # Route for the OAuth2 proxy
    - match:
        - uri:
            prefix: /oauth2
      route:
        - destination:
            host: oauth2-proxy.production.svc.cluster.local
            port:
              number: 80
    # Authentication required for all services
    - match:
        - uri:
            prefix: /services/
      route:
        - destination:
            host: oauth2-proxy.production.svc.cluster.local
            port:
              number: 80
    - match:
        - uri:
            prefix: /
          headers:
            user-agent:
              regex: ".*Chrome"
      route:
        - destination:
            host: store
            subset: v2
      fault:
        delay:
          percent: 50
          fixedDelay: 10s
    - match:
        - uri:
            prefix: /
      route:
        - destination:
            host: store
            subset: v1
      fault:
        abort:
          percentage:
            value: 50
          httpStatus: 500
    # All traffic to /services/invoice is authenticated then rewritten to the root of the invoice service
    - match:
        - uri:
            prefix: /services/invoice/
      rewrite:
        uri: /
      route:
        - destination:
            host: invoice
    # All traffic to /services/notification is authenticated then rewritten to the root of the notification service
    - match:
        - uri:
            prefix: /services/notification/
      rewrite:
        uri: /
      route:
        - destination:
            host: notification
    # All traffic to /services/product is authenticated then rewritten to the root of the product service
    - match:
        - uri:
            prefix: /services/product/
      rewrite:
        uri: /
      route:
        - destination:
            host: product
    # Default route for authenticated traffic
    - match:
        - uri:
            prefix: /
      route:
        - destination:
            host: store
